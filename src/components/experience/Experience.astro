---
import Border from "../_common/Border.astro";

// Experience data (replace with CMS / API later)
interface ExperienceItem {
        role: string;
        company: string;
        period: string;
        description: string;
        tech?: string[];
}
const experiences: ExperienceItem[] = [
        {
                role: "Full-Stack Developer (Intern)",
                company: "Five Twenty IT Service",
                period: "Jun 2024 – December 2024",
                description:
                        "Implemented end‑to‑end features for a corporate web platform designed REST APIs, refined responsive React UI, optimized database queries & strengthened testing for reliability.",
                tech: [
                        "Express",
                        "React",
                        "TypeScript",
                        "Prisma",
                        "PostgreSQL",
                        "Digital Ocean",
                        "Jest",
                        "Docker",
                ],
        },
        {
                role: "Freelance Developer",
                company: "Self‑Employed",
                period: "2023 – 2024",
                description:
                        "Deliver responsive landing pages & small business sites with semantic, accessible markup and lightweight tooling.",
                tech: ["NextJs", "React Native", "Supabase"],
        },
        {
                role: "Student Projects",
                company: "Cavite State University Bacoor",
                period: "2022 – 2024",
                description:
                        "Collaborated with other students on thesis and school projects building full‑stack features with clean architecture, solid state management & automated testing.",
                tech: [
                        "React",
                        "Node.js",
                        "Express",
                        "MongoDB",
                        "C#",
                        "Unity",
                        "Python",
                        "FastAPI",
                        "Spacy",
                ],
        },
        {
                role: "Getting Started",
                company: "Self Learning",
                period: "2021",
                description:
                        "Explored programming fundamentals, version control & web basics turning curiosity into structured learning.",
                tech: ["HTML", "CSS", "JavaScript", "Java", "Git"],
        },
];
---

<section
        id="experience"
        class="experience-section"
        aria-labelledby="experience-title"
>
        <Border />
        <h2 id="experience-title" class="section-title">
                My Developer Timeline
        </h2>
        <div class="timeline" role="list">
                {
                        experiences.map((item, i) => (
                                <div class="timeline-item" data-index={i}>
                                        <div
                                                class="marker"
                                                aria-hidden="true"
                                        />
                                        <article
                                                class="card"
                                                aria-labelledby={`exp-${i}-role`}
                                        >
                                                <header class="card-head">
                                                        <h3
                                                                id={`exp-${i}-role`}
                                                                class="role"
                                                        >
                                                                {item.role}
                                                        </h3>
                                                        <p class="meta">
                                                                <>
                                                                        <span class="company">
                                                                                {
                                                                                        item.company
                                                                                }
                                                                        </span>
                                                                        <span class="period">
                                                                                {
                                                                                        item.period
                                                                                }
                                                                        </span>
                                                                </>
                                                        </p>
                                                </header>
                                                <p class="description">
                                                        {item.description}
                                                </p>
                                                {item.tech && (
                                                        <div
                                                                class="tech"
                                                                aria-label="Technologies used"
                                                        >
                                                                {item.tech.map(
                                                                        (
                                                                                cur
                                                                        ) => (
                                                                                <div>
                                                                                        {
                                                                                                cur
                                                                                        }
                                                                                </div>
                                                                        )
                                                                )}
                                                        </div>
                                                )}
                                        </article>
                                </div>
                        ))
                }
        </div>
</section>

<style>
        .experience-section {
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
                padding: 3rem 1rem 4rem;
                gap: 32px;
                margin-top: 10vh;
        }

        .section-title {
                font-size: clamp(2.4rem, 4.5vw, 3.4rem);
                letter-spacing: 1px;
                font-weight: 600;
                text-align: center;
                width: 100%;
                margin-block: 32px;
        }

        .timeline {
                --line-width: 3px;
                width: min(1200px, 80%);
                list-style: none;
                position: relative;
                display: flex;
                flex-direction: column;
                gap: 32px;
        }

        /* Central vertical line (desktop) */
        .timeline::before {
                content: "";
                position: absolute;
                top: 0;
                bottom: 0;
                left: 50%;
                width: var(--line-width);
                transform: translateX(-50%);
                background: linear-gradient(
                        to bottom,
                        var(--color-primary-20) 0%,
                        var(--color-primary-40) 40%,
                        var(--color-primary-20) 100%
                );
        }

        .timeline-item {
                position: relative;
        }

        .timeline-item .marker {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 16px;
                height: 16px;
                border-radius: 50%;
                background: var(--color-primary);
                box-shadow: 0 4px 10px -2px var(--color-shadow-strong);
        }

        .timeline-item .card {
                background: var(--color-surface);
                border: 2px dashed var(--color-border);
                border-radius: 22px;
                padding: 1.75rem 1.9rem 2rem;
                display: flex;
                flex-direction: column;
                gap: 1rem;
                width: 100%;
                box-shadow:
                        0 3px 8px -2px var(--color-shadow-soft),
                        0 6px 18px -3px var(--color-shadow);
                transition:
                        transform 0.22s ease,
                        box-shadow 0.22s ease,
                        border-color 0.22s ease;
        }

        .timeline-item .card:hover {
                transform: translateY(-6px);
                border-color: var(--color-primary-40);
                box-shadow:
                        0 10px 22px -4px var(--color-shadow),
                        0 18px 36px -6px var(--color-shadow-strong);
        }

        .card-head {
                display: flex;
                flex-direction: column;
                gap: 0.25rem;
        }

        .role {
                font-size: clamp(1.25rem, 1vw + 1.05rem, 1.55rem);
                line-height: 1.2;
                font-weight: 600;
                color: var(--color-text-primary);
                margin: 0;
        }

        .meta {
                display: flex;
                flex-wrap: wrap;
                gap: 0.9rem;
                font-size: 0.9rem;
                text-transform: uppercase;
                letter-spacing: 0.09em;
                font-weight: 500;
                color: var(--color-text-muted);
                margin: 0;
        }

        .meta .company {
                position: relative;
        }
        .meta .company::after {
                content: "•";
                margin-left: 0.6rem;
                opacity: 0.55;
        }
        .meta .company:last-child::after {
                content: none;
        }

        .description {
                margin: 0;
                font-size: 1.05rem;
                line-height: 1.7;
                color: var(--color-text-secondary);
        }

        .tech {
                --badge-bg: var(--color-surface-alt);
                display: flex;
                flex-wrap: wrap;
                gap: 0.45rem;
                padding: 0;
                margin: 0;
                list-style: none;
        }
        .tech div {
                font-size: 0.75rem;
                letter-spacing: 0.07em;
                font-weight: 600;
                padding: 0.55rem 0.75rem;
                border-radius: 999px;
                background: var(--badge-bg);
                border: 1px solid var(--color-border);
                color: var(--color-text-muted);
        }

        @media (min-width: 850px) {
                .timeline {
                        --center-gap: 4rem;
                        gap: 3.5rem;
                        padding-inline: 0.5rem;
                }
                .timeline-item {
                        display: grid;
                        grid-template-columns: 1fr var(--line-width) 1fr;
                        align-items: center;
                        min-height: 26px;
                }
                .timeline-item[data-index]:nth-of-type(odd) .card {
                        grid-column: 1/2;
                        justify-self: end;
                        max-width: calc(100% - var(--center-gap));
                        margin-right: var(--center-gap);
                }
                .timeline-item[data-index]:nth-of-type(even) .card {
                        grid-column: 3/4;
                        justify-self: start;
                        max-width: calc(100% - var(--center-gap));
                        margin-left: var(--center-gap);
                }
        }

        @media (max-width: 850px) {
                .timeline::before {
                        left: 0.4rem;
                        width: 3px;
                        transform: none;
                        background: linear-gradient(
                                to bottom,
                                var(--color-primary-40) 0%,
                                var(--color-primary-20) 100%
                        );
                        opacity: 0.4;
                }
                .timeline-item .marker {
                        left: 0.5rem;
                        width: 18px;
                        height: 18px;
                        top: 1.4rem;
                        transform: translate(-50%, 0);
                        box-shadow: 0 3px 8px -2px var(--color-shadow);
                }
                .timeline-item .card {
                        margin-left: 2.2rem;
                }
        }

        @media (prefers-reduced-motion: reduce) {
                .timeline-item .card {
                        transition: none;
                }
                .timeline-item .card:hover {
                        transform: none;
                }
        }
        /* Performance hints for animated elements */
        .section-title,
        .timeline-item .card,
        .tech div {
                will-change: filter, opacity, transform;
        }
</style>

<script>
        import { gsap } from "gsap";
        import { ScrollTrigger } from "gsap/ScrollTrigger";

        if (typeof window !== "undefined") {
                const prefersReduced = window.matchMedia(
                        "(prefers-reduced-motion: reduce)"
                ).matches;

                if (!prefersReduced) {
                        gsap.registerPlugin(ScrollTrigger);

                        const init = () => {
                                const section =
                                        document.querySelector("#experience");
                                if (!section) return;

                                // Title blur-in
                                const title =
                                        section.querySelector(".section-title");
                                if (title) {
                                        gsap.fromTo(
                                                title,
                                                {
                                                        filter: "blur(6px)",
                                                        opacity: 0,
                                                        y: 16,
                                                },
                                                {
                                                        filter: "blur(0px)",
                                                        opacity: 1,
                                                        y: 0,
                                                        duration: 0.6,
                                                        ease: "power2.out",
                                                        scrollTrigger: {
                                                                trigger: title,
                                                                start: "top 90%",
                                                                end: "top 60%",
                                                                scrub: true,
                                                        },
                                                }
                                        );
                                }

                                // Cards blur-in on scroll
                                const cards = section.querySelectorAll(
                                        ".timeline-item .card"
                                );
                                cards.forEach((card) => {
                                        gsap.fromTo(
                                                card,
                                                {
                                                        filter: "blur(10px)",
                                                        opacity: 0,
                                                        y: 24,
                                                },
                                                {
                                                        filter: "blur(0px)",
                                                        opacity: 1,
                                                        y: 0,
                                                        ease: "none",
                                                        scrollTrigger: {
                                                                trigger: card,
                                                                start: "top 90%",
                                                                end: "top 60%",
                                                                scrub: true,
                                                        },
                                                }
                                        );

                                        // Tech badges subtle stagger-in
                                        const badges =
                                                card.querySelectorAll(
                                                        ".tech div"
                                                );
                                        if (badges.length) {
                                                ScrollTrigger.batch(badges, {
                                                        start: "top 90%",
                                                        end: "top 60%",
                                                        once: true,
                                                        onEnter: (batch) => {
                                                                gsap.fromTo(
                                                                        batch,
                                                                        {
                                                                                filter: "blur(6px)",
                                                                                opacity: 0,
                                                                                y: 8,
                                                                        },
                                                                        {
                                                                                filter: "blur(0px)",
                                                                                opacity: 1,
                                                                                y: 0,
                                                                                duration: 0.4,
                                                                                stagger: 0.06,
                                                                                ease: "power2.out",
                                                                        }
                                                                );
                                                        },
                                                });
                                        }
                                });

                                // Markers quick pop-in for a touch of life
                                const markers = section.querySelectorAll(
                                        ".timeline-item .marker"
                                );
                                if (markers.length) {
                                        gsap.fromTo(
                                                markers,
                                                {
                                                        opacity: 0,
                                                        scale: 0.8,
                                                        filter: "blur(4px)",
                                                },
                                                {
                                                        opacity: 1,
                                                        scale: 1,
                                                        filter: "blur(0px)",
                                                        duration: 0.4,
                                                        stagger: 0.1,
                                                        ease: "power2.out",
                                                        scrollTrigger: {
                                                                trigger: section,
                                                                start: "top 90%",
                                                                toggleActions:
                                                                        "play none none reverse",
                                                        },
                                                }
                                        );
                                }
                        };

                        // Initialize after layout settled and refresh on full load
                        requestAnimationFrame(() => {
                                init();
                                window.addEventListener("load", () =>
                                        ScrollTrigger.refresh()
                                );
                        });
                }
        }
</script>
